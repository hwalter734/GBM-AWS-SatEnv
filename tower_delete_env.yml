- name: Delete Red Hat Satellite environment on AWS
  hosts: localhost
  gather_facts: false
  tasks:
    - name: Get ec2 machines info with type "ec2-instance"
      ec2_instance_info:
        region: "{{ region }}"
        filters:
          "tag:type": ec2instance
          instance-state-name: ['running', 'stopped']
      register: __ec2_info

    - name: Get vpc {{ vpc_name }} info
      ec2_vpc_net_info:
        region: "{{ region }}"
        filters:
          "tag:Name": "{{ vpc_name }}"
      register: __vpc_info

    - name: Get route table info of {{ __vpc_info.vpcs[0].vpc_id }}
      ec2_vpc_route_table_info:
        region: "{{ region }}"
        filters:
          vpc-id: "{{ __vpc_info.vpcs[0].vpc_id }}"
      register: __route_table_info

    - name: Delete ec2 machines with type "ec2-instance"
      ec2:
        region: "{{ region }}"
        instance_id: "{{ item.instance_id }}"
        state: absent
        wait: yes
      with_items: "{{ __ec2_info.instances }}"
      when: __ec2_info.instances | length > 0

    - name: Delete security groups of Satellite and Capsule instances
      ec2_group:
        name: "{{ item }}"
        region: "{{ region }}"
        state: absent
      with_items:
        - "{{ sat_sg_name }}"
        - "{{ cap_sg_name }}"

    - name: Delete route table "{{ __route_table_info.route_tables[0].id }}"
      ec2_vpc_route_table:
        route_table_id: "{{ __route_table_info.route_tables[0].id }}"
        vpc_id: "{{ __vpc_info.vpcs[0].vpc_id }}"
        region: "{{ region }}"
        lookup: id
        state: absent

    - name: Delete subnet {{ subnet1_name }} and {{ subnet2_name }}
      ec2_vpc_subnet:
        vpc_id: "{{ __vpc_info.vpcs[0].vpc_id }}"
        region: "{{ region }}"
        cidr: "{{ item }}"
        state: absent
      with_items:
        - "{{ subnet1_cidr }}"
        - "{{ subnet2_cidr }}"

    - name: Delete internet gateway "{{ igw_name }}"
      ec2_vpc_igw:
        vpc_id: "{{ __vpc_info.vpcs[0].vpc_id }}"
        region: "{{ region }}"
        state: absent

    - name: Delete VPC "{{ vpc_name }}" in region {{ region }}
      ec2_vpc_net:
        name: "{{ vpc_name }}"
        cidr_block: "{{ vpc_cidr_block }}"
        region: "{{ region }}"
        state: absent
